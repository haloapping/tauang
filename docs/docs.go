// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login User Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.loginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.loginResp"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register User Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.registerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.registerResp"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "post": {
                "description": "Create new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create new wallet",
                "parameters": [
                    {
                        "description": "Create new wallet request",
                        "name": "wallet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wallet.createWalletReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.singleWalletResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user.loginReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "password": {
                    "type": "string",
                    "x-order": "4"
                }
            }
        },
        "user.loginResp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "user.registerReq": {
            "type": "object",
            "required": [
                "confirmPassword",
                "email",
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "phone": {
                    "type": "string",
                    "x-order": "3"
                },
                "password": {
                    "type": "string",
                    "x-order": "4"
                },
                "confirmPassword": {
                    "type": "string",
                    "x-order": "5"
                }
            }
        },
        "user.registerResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.user"
                        }
                    ],
                    "x-order": "2"
                }
            }
        },
        "user.user": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "phone": {
                    "type": "string",
                    "x-order": "3"
                },
                "createdAt": {
                    "type": "string",
                    "x-order": "5"
                },
                "updatedAt": {
                    "type": "string",
                    "x-order": "6"
                }
            }
        },
        "wallet.createWalletReq": {
            "type": "object",
            "required": [
                "currency",
                "description",
                "name",
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string",
                    "x-order": "1"
                },
                "name": {
                    "type": "string",
                    "x-order": "2"
                },
                "description": {
                    "type": "string",
                    "x-order": "3"
                },
                "currency": {
                    "type": "string",
                    "x-order": "4"
                }
            }
        },
        "wallet.singleWalletResp": {
            "type": "object",
            "required": [
                "data",
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "x-order": "1"
                },
                "data": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/wallet.wallet"
                        }
                    ],
                    "x-order": "2"
                }
            }
        },
        "wallet.wallet": {
            "type": "object",
            "required": [
                "ID",
                "createdAt",
                "currency",
                "description",
                "name",
                "updatedAt",
                "userID"
            ],
            "properties": {
                "ID": {
                    "type": "string",
                    "x-order": "1"
                },
                "userID": {
                    "type": "string",
                    "x-order": "2"
                },
                "name": {
                    "type": "string",
                    "x-order": "3"
                },
                "description": {
                    "type": "string",
                    "x-order": "4"
                },
                "currency": {
                    "type": "string",
                    "x-order": "5"
                },
                "createdAt": {
                    "type": "string",
                    "x-order": "6"
                },
                "updatedAt": {
                    "type": "string",
                    "x-order": "7"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "tauang API",
	Description:      "tauang API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
